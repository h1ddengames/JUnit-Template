# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    #- cron: '*/5 * * * *' # Every 5 minutes
    - cron: '0 0 * * 0' # At 00:00 on Sunday.

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-package: jdk
          java-version: 11.0.6

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Copy JAR files to new Directory  
        run: mkdir output && cp target/$(grep -o "<artifactId>.*</artifactId>" pom.xml | head -1 | sed "s#<artifactId>###\g" | sed "s#</artifactId>###\g")-$(grep -o "<version>.*</version>" pom.xml | head -1 | sed "s#<version>###\g" | sed "s#</version>###\g").jar output

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: docs/allure-results
          allure_history: docs/allure-results/history
          allure_report: docs/allure-report

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: reports+jar
          path: |
            docs/allure-results
            docs/allure-reports
            docs/allure-report
            output